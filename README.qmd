---
title: cidtree
output: github_document
author: Jake Peters
date: Apr 2024
toc: true
toc-depth: 3
toc-float: true
format: gfm
---

<!-- README.md is generated from README.Rmd. Please edit that file -->

## Introduction

The objectives of `cidtree` package are to

1.  construct a `data.tree` object from a data dictionary

2.  provide convenient functions to explore the data dictionary

3.  automate the mapping of Concept IDs to the associated concepts and metadata.

4.  map concepts to their counterparts in the cidtree GCP tables

I intend this to be a toolkit to standardize the way that analysts interact with the Connect for Cancer Prevention data dictionary.

Here is the **documentation**: <https://github.com/Analyticsphere/cidtree/blob/main/cidtree_docs.pdf>

## Examples

Load dependencies

```{r, message=FALSE}
library(dplyr)
library(data.tree)
library(jsonlite)
library(devtools)
```

### Install `cidtree`

**Option 1:** If you have cloned this repo and are working inside the \~/cidtree/ directory, use this:

```{r, message=FALSE}
devtools::load_all("./")
```

**Option 2:** If you want to install the library and load it like any other library, use this:

```{r, message=FALSE}
devtools::install_github('Analyticsphere/cidtree')
library(cidtree)
```

### Construct and visualize a data dictionary tree

```{r}
path <- "./data/test_dictionary"
dd <- cidtree::construct_dictionary_tree(path)
print(dd, 'concept_str')
```

::: callout-note
## Notice that all of the RESPONSE concepts are nested directly under the root node rather than under the QUESTION objects. This is necessary because they can appear only once in the tree.
:::

### View dictionary as a dataframe

```{r, echo=TRUE, include=TRUE}

dd$df %>% 
  select(cid, path, key) %>%
  head(5)
```

### Retrieve a key, given a cid

```{r, echo=TRUE, include=TRUE}
cid <- 639684251
key <- cidtree::get_key(dd, cid)
print(key)
```

### Retrieve a concept id, given a key

```{r, echo=TRUE, include=TRUE}
key <- "Do you smoke cigarettes now?"
cid <- cidtree::get_cid(dd, key)
print(cid)
```

### Retrieve all metadata using the cid

```{r, echo=TRUE, include=TRUE, out.extra='scale=0.5'}
meta <- cidtree::get_meta(dd, cid)
meta$cid
meta$path
meta$var_name
meta$responses
meta$concept_type
```
